#!/bin/sh
#
# Generates the files build.ts and version.json populated with build
# metadata including version info.

timestamp="$(date +%s)"
if date -j >/dev/null 2>&1; then
    # BSD date
    time_utc=$(date -r $timestamp -u +%FT%TZ)
    time_local=$(date -r $timestamp +%FT%T%z)
else
    # GNU or BusyBox date
    time_utc=$(date -d @$timestamp -u +%FT%TZ)
    time_local=$(date -d @$timestamp +%FT%T%z)
fi

if [ -n "$TAG_NAME" ]; then
    # tagged/manual deployment build
    version="$TAG_NAME"
elif [ -n "$SHORT_SHA" ]; then
    # auto/continuous deployment build
    version="$SHORT_SHA"
else
    # local build
    version="$USER-$time_local"
fi
printf "// This file was auto-generated by version.sh.
export const build = {
  version: '%s',
  time: '%s'
};
" \
"$version" \
"$time_utc" \
> $(dirname $0)/../src/environments/build.ts

# Generate a version file used by the client to check for newer
# versions. This is needed for Safari (where the service worker version
# check is broken) and older browsers that don't support service
# workers.
printf '{"version":"%s"}\n' "$version" \
> $(dirname $0)/../src/assets/version.json
